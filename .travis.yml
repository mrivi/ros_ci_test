# Based on https://github.com/felixduvallet/ros-travis-integration
#
# vim:set ts=2 sw=2 et:
dist: xenial
sudo: required
language: generic
compiler:
  - gcc
cache:
  directories:
    - $HOME/.cache/pip
  before_cache:
    - rm -f $HOME/.cache/pip/log/debug.log
cache:
  - apt

env:
  global:
    #- ROS_DISTRO=jade
    - ROS_CI_DESKTOP="$(lsb_release -cs)"
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
    - ROS_PARALLEL_JOBS='-j8 -l6'
    - ROS_DISTRO=kinetic

before_install:
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  #- sudo sh -c "echo \"deb http://packages.ros.org/ros-shadow-fixed/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
  - sudo apt-get clean -y
  - sudo apt-get update -qq
  # - sudo -H apt-get install -qq -y --allow-unauthenticated python2.7-dev libpython2.7-dev libpython2.7 python2.7 libpython2.7-stdlib
  #   python-pip python-setuptools python-catkin-pkg python-rosdep python-wstool
  - sudo apt-get install -y build-essential
  - sudo apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
  - sudo apt-get install -y python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
  - sudo apt-get install -y -qq curl g++ wget libusb-dev libusb-1.0-0-dev
  - sudo apt-get install -y python-rosinstall python-rosinstall-generator python-wstool python-catkin-tools
  - sudo apt-get install -y ros-$ROS_DISTRO-ros-base
 # - sudo apt-get install -y ros-$ROS_DISTRO-catkin python-catkin-tools
  # Install Python future module
  #- sudo -H pip install -I future -t /usr/lib/python2.7/dist-packages
  # Update PYTHONPATH
  #- export PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages
  - sudo apt-get install -y ros-$ROS_DISTRO-mavlink ros-$ROS_DISTRO-mavros ros-$ROS_DISTRO-mavros-extras
  # Source environment
  - sudo apt-get install -y clang-format
  - source /opt/ros/$ROS_DISTRO/setup.bash
  # Prepare rosdep
  - sudo rosdep init
  - rosdep update

install:
  # Create catkin workspace
  - mkdir -p ~/catkin_ws
  - cd ~/catkin_ws
  - catkin config --init --mkdirs
  #- mkdir -p ./src
  # Pull source depends
  - cd src
  - wstool init
  #- if [[ -f $ROSINSTALL_FILE ]]; then wstool merge $ROSINSTALL_FILE; fi
  #- wstool up
  # Link the repo we are testing to the new workspace
  - ln -s $CI_SOURCE_PATH .
  # Install dependencies using rosdep
  - cd ~/catkin_ws
  - rosdep install --from-paths src --ignore-src --rosdistro $ROS_DISTRO -q -y
  # Install GeographicLib datasets (for Ubuntu Trusty - can only download geoid model)
  - sudo -H mkdir -p /usr/share/geographiclib
  - wget https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh
  - chmod +x install_geographiclib_datasets.sh
  - sudo -H ./install_geographiclib_datasets.sh
  - curl -sL https://github.com/opencv/opencv/archive/2.4.13.6.zip > opencv.zip
  - unzip opencv.zip
  - cd opencv-2.4.13.6
  - mkdir build
  - cd build
  - cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_RULE_MESSAGES=OFF -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_EXAMPLES=OFF -D WITH_QT=ON -D WITH_OPENGL=ON ..
  - make -j"$(nproc)"  
  - sudo make install
  - sudo sh -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'
  - sudo ldconfig
  - catkin init

before_script:
  # Source environment
  - source /opt/ros/$ROS_DISTRO/setup.bash

script:
  - cd ~/catkin_ws
  #- catkin config --install -DSETUPTOOLS_DEB_LAYOUT=OFF -DSETUPTOOLS_ARG_EXTRA=""
  - source /opt/ros/$ROS_DISTRO/setup.bash
  - catkin build
  # Check for clang format
  - cd src/ros_ci_test
  - chmod +x check_code_format.sh
  - ./check_code_format.sh
  #- source devel/setup.bash
 # - catkin run_tests --no-status -p1 -i --summary
  #- catkin_test_results --all ~/catkin_ws/build

after_failure:
  - find ~/catkin_ws/build -path '*/test_results/*' -type f -exec echo "==== {} ====" \; -exec cat {} \;
