# Use ubuntu trusty (14.04) with sudo privileges.
dist: trusty
sudo: required
language:
  - cpp
cache:
  - apt

# Configuration variables. All variables are global now, but this can be used to
# trigger a build matrix for different ROS distributions if desired.
env:
  global:
    - ROS_DISTRO=kinetic
    - ROS_CI_DESKTOP="`lsb_release -cs`"  # e.g. [precise|trusty|...]
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
    - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
    - ROS_PARALLEL_JOBS='-j8 -l6'
    # Set the python path manually to include /usr/-/python2.7/dist-packages
    # as this is where apt-get installs python packages.
    - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

################################################################################

# Install system dependencies, namely a very barebones ROS setup.
before_install:
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros-latest.list"
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-add-repository ppa:deadsnakes/ppa -y
  - sudo apt-get update -qq
  - sudo -H apt-get install -qq -y --allow-unauthenticated python2.7-dev libpython2.7-dev libpython2.7 python2.7 libpython2.7-stdlib
    python-pip python-setuptools python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-catkin python-catkin-tools
  # Install Python future module
  - sudo -H pip install -I future -t /usr/lib/python2.7/dist-packages
  # Update PYTHONPATH
  - export PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages
  # Source environment
  - source /opt/ros/$ROS_DISTRO/setup.bash
  # Prepare rosdep
  - sudo rosdep init
  - rosdep update


# Create a catkin workspace with the package under integration.
install:
  - mkdir -p ~/catkin_ws/src
  - cd ~/catkin_ws/src
  - catkin config --init --mkdirs
  # Pull source depends
  - cd src
  - wstool init
  - if [[ -f $ROSINSTALL_FILE ]]; then wstool merge $ROSINSTALL_FILE; fi
  - wstool up
  # Link the repo we are testing to the new workspace
  - ln -s $CI_SOURCE_PATH .
  # Install dependencies using rosdep
  - cd ~/catkin_ws
  - rosdep install --from-paths src --ignore-src --rosdistro $ROS_DISTRO -q -y
  # Install GeographicLib datasets (for Ubuntu Trusty - can only download geoid model)
  - sudo -H mkdir -p /usr/share/geographiclib
  - sudo -H geographiclib-datasets-download egm96_5

before_script:
  # Source environment
  - source /opt/ros/$ROS_DISTRO/setup.bash

# Compile and test (mark the build as failed if any step fails). If the
# CATKIN_OPTIONS file exists, use it as an argument to catkin_make, for example
# to blacklist certain packages.
#
# NOTE on testing: `catkin_make run_tests` will show the output of the tests
# (gtest, nosetest, etc..) but always returns 0 (success) even if a test
# fails. Running `catkin_test_results` aggregates all the results and returns
# non-zero when a test fails (which notifies Travis the build failed).
script:
  - cd ~/catkin_ws
#  - catkin_make $( [ -f $CATKIN_OPTIONS ] && cat $CATKIN_OPTIONS )
  - catkin build --no-status --summary
  # Run the tests, ensuring the path is set correctly.
 # - source devel/setup.bash
#- catkin_make run_tests && catkin_test_results

after_failure:
  - find ~/catkin_ws/build -path '*/test_results/*' -type f -exec echo "==== {} ====" \; -exec cat {} \;
